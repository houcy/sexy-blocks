define("widget/display",function(t,e,i){var n=function(t,e,i){this.vm=i,this.size=t||500,this.step=e||50,this.objects=[],this._dragging=0,this._previewing=!1};n.CUBE_TEXTURE=THREE.ImageUtils.loadTexture("/sexy-blocks/module/widget/display/cube_texture_6b605db.png"),n.prototype.init=function(t){this.container=t,this._initCamera(),this._initControls(),this._initScene(),this._initGrid(),this._initRaycaster(),this._initLight(),this._initRender(),this._bindEvents(),this.render()},n.prototype.preview=function(){this._previewing=!this._previewing,this._rotate=Math.atan2(this.camera.position.z,this.camera.position.x),this._play()},n.prototype._play=function(){if(this._previewing){requestAnimationFrame(this._play.bind(this)),this._rotate-=.01;var t=this.camera.position,e=Math.sqrt(Math.pow(t.x,2)+Math.pow(t.z,2)),i=Math.cos(this._rotate)*e,n=Math.sin(this._rotate)*e,s=t.y;t.set(i,s,n),this.camera.lookAt(new THREE.Vector3),this.render()}},n.prototype._initCamera=function(){this.camera=new THREE.PerspectiveCamera(45,window.innerWidth/window.innerHeight,1,1e4),this.camera.position.set(500,800,1300),this.camera.lookAt(new THREE.Vector3)},n.prototype._initControls=function(){this.controls=new THREE.OrbitControls(this.camera),this.controls.target.set(0,0,0),this.controls.update()},n.prototype._initScene=function(){this.scene=new THREE.Scene},n.prototype._initGrid=function(){for(var t=this.size,e=this.step,i=new THREE.Geometry,n=-t;t>=n;n+=e)i.vertices.push(new THREE.Vector3(-t,0,n)),i.vertices.push(new THREE.Vector3(t,0,n)),i.vertices.push(new THREE.Vector3(n,0,-t)),i.vertices.push(new THREE.Vector3(n,0,t));var s=new THREE.LineBasicMaterial({color:0,opacity:.2,transparent:!0}),o=new THREE.LineSegments(i,s);this.scene.add(o)},n.prototype._initRaycaster=function(){this.raycaster=new THREE.Raycaster,this.mouse=new THREE.Vector2;var t=new THREE.PlaneBufferGeometry(1e3,1e3);t.rotateX(-Math.PI/2),this.plane=new THREE.Mesh(t,new THREE.MeshBasicMaterial({visible:!1})),this.scene.add(this.plane),this.objects.push(this.plane)},n.prototype._initLight=function(){var t=new THREE.AmbientLight(16777215);this.scene.add(t)},n.prototype._initRender=function(){this.renderer=new THREE.WebGLRenderer({antialias:!0}),this.renderer.setClearColor(15790320),this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.setSize(window.innerWidth,window.innerHeight),this.container.appendChild(this.renderer.domElement)},n.prototype.render=function(){this.renderer.render(this.scene,this.camera)},n.prototype._bind=function(t,e,i,n){return t.addEventListener(e,function(t){t.preventDefault(),n&&this._previewing||(i.call(this,t),this.render())}.bind(this),!1)},n.prototype._bindEvents=function(){this._bind(window,"resize",this._onWindowResize),this._bind(this.container,"touchstart",this._onTouchStart,!0),this._bind(this.container,"touchmove",this._onTouchMove,!0),this._bind(this.container,"touchend",this._onTouchEnd,!0)},n.prototype._onWindowResize=function(){this.camera.aspect=window.innerWidth/window.innerHeight,this.camera.updateProjectionMatrix(),this.renderer.setSize(window.innerWidth,window.innerHeight)},n.prototype._onTouchEnd=function(t){if(0===t.touches.length&&this._dragging<3){var e=t.changedTouches[0];this._click(e.clientX,e.clientY)}},n.prototype._click=function(t,e){var i=this._getIntersect(t,e);i&&(this.vm.earse?this._delCube(i):this._addCube(i))},n.prototype._onTouchMove=function(){this._dragging++},n.prototype._onTouchStart=function(t){1===t.touches.length&&(this._dragging=0)},n.prototype._getIntersect=function(t,e){this.mouse.set(t/window.innerWidth*2-1,2*-(e/window.innerHeight)+1),this.raycaster.setFromCamera(this.mouse,this.camera);var i=this.raycaster.intersectObjects(this.objects);return i.length>0?i[0]:void 0},n.prototype._addCube=function(t){if(t){var e=new THREE.BoxGeometry(this.step,this.step,this.step),i=new THREE.MeshLambertMaterial({color:this.vm.color,map:n.CUBE_TEXTURE}),s=new THREE.Mesh(e,i),o=s.position;if(o.copy(t.point).add(t.face.normal),o.divideScalar(50).floor().multiplyScalar(50).addScalar(25),o.y<0||o.y>this.size||o.x>this.size||o.z>this.size||o.z<-this.size||o.x<-this.size)return;this.scene.add(s),this.objects.push(s)}},n.prototype._delCube=function(t){t&&t.object!=this.plane&&(this.scene.remove(t.object),this.objects.splice(this.objects.indexOf(t.object),1))},i.exports=Vue.extend({template:'<div class="w-display">\n    <div class="w-display_viewer"></div>\n    <div class="w-display_toolbar">\n        <label v-for="c in colors">\n            <input type="radio" :value="c.value" v-model="color">\n            <span>{{ c.text }}</span>\n        </label>\n        <label>\n            <input type="checkbox" v-model="earse"> 删除模式\n        </label>\n        <label> <button @click="onPreview">预览</button> </label>\n    </div>\n</div>',data:function(){return{color:"#f00",earse:!1,colors:[{value:"#f00",text:"红色"},{value:"#0f0",text:"绿色"},{value:"#00f",text:"蓝色"},{value:"#ff0",text:"黄色"},{value:"#f0f",text:"紫色"},{value:"#0ff",text:"青色"},{value:"#fff",text:"白色"},{value:"#000",text:"黑色"}]}},ready:function(){!Detector.webgl,this.display=new n(500,50,this),this.display.init(this.$el.querySelector(".w-display_viewer"))},methods:{onPreview:function(){this.display.preview()}}})});